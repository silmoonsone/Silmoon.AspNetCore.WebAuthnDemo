@page
@using Microsoft.AspNetCore.Authorization
@using Silmoon.Extension
@using Silmoon.AspNetCore.KeyAuthDemo.Models.SubModels
@attribute [Authorize]
@model UserModel
@{
    ViewData["Title"] = "User";
    UserWebAuthnInfo[] userWebAuthnInfos = ViewBag.UserWebAuthnInfos as UserWebAuthnInfo[];
}

<div>User</div>
<hr />
<div>
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <div class="small text-secondary">username</div>
            <div class="text-primary fw-bold">@User.Identity.Name</div>
        </div>
        <div>
            <button class="btn btn-primary btn-sm" id="enroll" onclick="createWebAuthn()">Add passkey</button>
            <button class="btn btn-primary btn-sm" id="signout" onclick="authenticateWebAuthn('@ViewData["UserObjectId"]')">Verify</button>
            <button class="btn btn-danger btn-sm" id="signout" onclick="signout()">Signout</button>
        </div>
    </div>
    <hr />
    <div>
        @if (userWebAuthnInfos.IsNullOrEmpty())
        {
            <div class="small text-secondary">No any passkey.</div>
        }
        else
        {
            @foreach (var item in userWebAuthnInfos)
            {
                <div class="card shadow p-3 my-3">
                    <div class="d-flex justify-content-between">
                        <div>
                            <span class="mark">[@item.PublicKeyAlgorithm]</span>
                            <span class="mark">[@item.AuthenticatorAttachment]</span>
                            <span>@item.CredentialId.GetBase64String()</span>
                        </div>
                        <div>
                            <button class="btn btn-sm btn-danger deleteButton" onclick="deleteWebAuthn('@item.CredentialId.GetBase64String()')">DELETE</button>
                        </div>
                    </div>
                </div>
            }
        }
    </div>

</div>

<script>
    async function signout() {
        if (confirm('确定退出吗？')) {
            fetch("/doSignout", {
                method: "GET"
            }).then(response => {
                if (response.ok) {
                    window.location.href = "/signin";
                } else {
                    alert("Signout error");
                }
            });
        }
    }
</script>
